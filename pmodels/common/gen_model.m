classdef gen_model
    % The base class for generative model
    %
    % In general, the math formulation of the model can be written as
    %
    %   theta_k | alpha_1, alpha_2, ... ~ hyper model, for k = 1, ..., K
    %   x_i | {theta_k}, z_i, ... ~ generative model,  for i = 1, ..., n
    %
    
    % Created by Dahua Lin, on Aug 26, 2011
    %
    
    %% properties
    
    properties(Abstract)
        param_name;         % the name of the parameter
        param_size;         % the parameter size
        num_hyper_params;   % the number of hyper parameters
    end
    
    %% methods to retrieve basic information
    
    methods(Abstract)        
        
        psiz = get_hyper_param_size(model, i);
        % Gets the size of the i-th hyper-parameter.
        
        pname = get_hyper_param_name(model, i);
        % Gets the name of the i-th hyper-parameter.
        
        ssiz = get_product_size(model);
        % Gets the size of each produced sample
                
    end    
    
    %% computation methods
    
    methods(Abstract)
       
        X = generate(model, Theta, Z);
        % Generates product samples given parameters and labels
        %
        %   X = model.generate(theta, n);
        %
        %       generates n sample from the model with parameter theta.
        %
        %   X = model.generate(Theta, g);
        %
        %       generates samples from multi-models whose parameters are
        %       given by Theta based on the grouping given in g, a cell
        %       array of index vectors.
        %
        %       In particular, the samples with indices in g{k} is should
        %       be generated by the k-th model.        
        %
        
        Theta = map_estimate_params(model, X, Z, Alpha, hmap);
        % Performs Maximum-a-posteriori (MAP) estimation of parameters
        %
        %   theta = model.map_estimate_params(X);
        %
        %   theta = model.map_estimate_params(X, [], alpha);
        %
        %       Performs MAP estimation of the parameter based on 
        %       a given set of samples, each with weight 1. 
        %
        %       Alpha is a cell array comprised of all hyper parameters.
        %       When num_hyper_params == 0, Alpha should be empty or 
        %       omitted, and this function should perform MLE estimation.
        %
        %   Theta = model.map_estimate_params(X, W, alpha);
        %
        %       Performs MAP estimation based on weighted samples.
        %
        %       W should be a K x n matrix, where W(k, i) is the
        %       contribution weight of the i-th sample to the k-th model.
        %       In output, Theta is comprised of K parameters.
        %
        %   Theta = model.map_estimate_params(X, g, alpha);
        %
        %       Performs MAP estimation based on grouped samples.
        %       Here, g is a cell array of index vectors, and the k-th
        %       model parameter should be estimated based on the samples
        %       whose index is in g{k}.
        %
        %   Theta = model.map_estimate_params(X, .., Alpha, hmap);
        %
        %       Performs MAP estimation with hyper-map. Here, hmap is
        %       an index vector of length K, and Alpha is a cell matrix,
        %       of which each column gives a set of hyper-params.
        %
        %       The estimation of the k-th model parameter should be
        %       based on hmap(k)-th hyper-parameter(s) contained in
        %       Alpha. 
        %
        
        Theta = sample_params(X, Z, Alpha, hmap);
        % Samples from the posterior distribution of parameters
        %
        %   theta = model.sample_params(X);
        %   theta = model.sample_params(X, [], alpha);
        %
        %       samples a parameter theta, given a set of data X.
        %
        %   theta = model.sample_params(X, W, alpha);
        %   theta = model.sample_params(X, g, alpha);
        %   Theta = model.sample_params(X, .., Alpha, hmap);
        %
        %       samples K parameters (packed in Theta as output), 
        %       given a weighted/grouped set of data X.
        %       hyper-map can also be used here.
        %
    end
    
end



